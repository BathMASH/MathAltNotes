\Preamble{xhtml,mathml}
\Configure{VERSION}{}
\Configure{DOCTYPE}{\HCode{<!DOCTYPE html>\Hnewline}}
\Configure{HTML}{\HCode{<html>\Hnewline}}{\HCode{\Hnewline</html>}}
\Configure{@HEAD}{}
\Configure{@HEAD}{\HCode{<meta charset="UTF-8" />\Hnewline}}
\Configure{@HEAD}{\HCode{<meta name="viewport" content="target-densitydpi=device-dpi; width=device-width; initial-scale=1.0; minimum-scale=1.0; user-scalable=yes;" />\Hnewline}}
\Configure{@HEAD}{\HCode{<meta name="HandheldFriendly" content="True" />\Hnewline}}
\Configure{@HEAD}{\HCode{<meta name="generator" content="TeX4ht
(http://www.cse.ohio-state.edu/\string~gurari/TeX4ht/)" />\Hnewline}}
\Configure{@HEAD}{\HCode{<link
         rel="stylesheet" type="text/css"
         href="\expandafter\csname aa:CssFile\endcsname" />\Hnewline}}
\Configure{@HEAD}{\HCode{<link
         rel="stylesheet" type="text/css"
         href="additional.css" />\Hnewline}}
\Configure{@HEAD}{\HCode{<script type="text/x-mathjax-config">\Hnewline
MathJax.Hub.Config({ 
"fast-preview": {disabled: true},\Hnewline
explorer:{ subtitle: true },\Hnewline
displayAlign: "\displaywhere", \Hnewline
MatchWebFonts: {\Hnewline 
matchFor: { "HTML-CSS": true, NativeMML: false, SVG: false },\Hnewline
fontCheckDelay: 2000,\Hnewline
fontCheckTimeout: 30 * 1000\Hnewline
},\Hnewline
"HTML-CSS": {\Hnewline
preferredFont: "STIX", \Hnewline
availableFonts: ["STIX","TeX"], \Hnewline
webFont: "STIX-Web", \Hnewline
linebreaks: { automatic: true, width: "90\% container" }\Hnewline
},\Hnewline
SVG: { \Hnewline
font: "STIX-Web",\Hnewline
linebreaks: { automatic: false, width: "90\% container" }\Hnewline
},\Hnewline
menuSettings: { collapsible: false, autocollapse: false, explorer: false }\Hnewline
});\Hnewline
</script>\Hnewline}}
\Configure{@HEAD}{\HCode{<script type="text/javascript"\Hnewline
src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML-full"\Hnewline
></script>\Hnewline}}
\Configure{@HEAD}{\HCode{<style type="text/css">\Hnewline
  ".MathJax_MathML" {text-indent: 0;}\Hnewline
</style>\Hnewline}}

\ConfigureEnv{pspicture}{\Picture*{}}{\EndPicture}{}{}
\Configure{Picture}{.svg}

%https://tex.stackexchange.com/questions/398025/problems-of-pdf-format-graphic-or-image-when-using-htlatex-to-convert-tex-to-h/398058

\newcommand{\thealt}{No alt text was set.}
\renewcommand{\nextalt}[1]{\renewcommand{\thealt}{#1}}

\Configure{graphics*}{jpg}{
\Picture[\HCode{\thealt}]{\csname Gin@base\endcsname.jpg } 
}
\Configure{graphics*}{png}{
\Picture[\HCode{\thealt}]{\csname Gin@base\endcsname.png }
}
\Configure{graphics*}{pdf}{
\Picture[\HCode{\thealt}]{\csname Gin@base\endcsname.svg }
}
\Configure{graphics*}{eps}{
\Picture[\HCode{\thealt}]{\csname Gin@base\endcsname.svg }
}
\Configure{graphics*}{svg}{
\Picture[\HCode{\thealt}]{\csname Gin@base\endcsname.svg }
}
\Configure{graphics*}{interim}{
\Picture[\HCode{\thealt}]{./figures/latexpdfsvg/\csname Gin@base\endcsname.svg }
}

\newtoks\eqtoks 
\def\PICalt{\LARGE\afterassignment\setimg\eqtoks} 
\def\setimg{\Picture*[{\HCode{\the\eqtoks}}]{ }\the\eqtoks\EndPicture\normalsize}  

%http://michal-h21.github.io/src4ht/tex4ht-html-speechse24.html
\Configure{newtheorem}
    {\ifvmode\IgnorePar\fi\EndP
      \HCode{<div class="newtheorem">}\par\noindent
      \HCode{<span class="head" custom-style="Theorem">}}
    {\HCode{</span>}}
    {\EndP\IgnorePar\HCode{</div>}\ShowPar\par}
 \Css{span.head { font-weight:bold; }}

\Configure{textbf}{\Protect\HCode{<b>}\NoFonts}{\EndNoFonts\Protect\HCode{</b>}}
\Configure{textit}{\Protect\HCode{<i>}\NoFonts}{\EndNoFonts\Protect\HCode{</i>}}

% https://tex.stackexchange.com/questions/321259/tex4ht-changes-in-math-mode-to-x-in-html-when-not-including-usepackaget1f
\def\mathunderscore{\mbox{\textunderscore}}

%This is what to do with environments that aren't dealing with end par correctly
\ConfigureEnv{tabularx}
	{\ifvmode\IgnorePar\fi\EndP}
	{}
	{\EndP\IgnorePar\ShowPar\par}

\ConfigureEnv{textblock}
	{\ifvmode\IgnorePar\fi\EndP}
	{}
	{\EndP\IgnorePar\ShowPar\par}

%We want to be able to flush left all display math in the Word document, this requires us to inject a custom style into the the div at the moment I am doing this in mathml.4ht but we should really start to move these sorts of things in here. In this case we _have to_ as we want to do it only sometimes. 
%Injecting into the math block itself does not work, it does not make it into Word. We need to inject at the div level above that... I think? But where is that? The other possibility is that we need to inject a span within that div. This style requires us to find the div! The div is class="par-math-display" which is only in the lit sources in the following

\Configure{mathml[]}
  {\edef\MathPar{\ifvmode par-\fi}\IgnorePar\endgraf\EndP
    \HCode{<div class="\MathPar math-block" custom-style="Normal">}}
  {\HCode{</div>}}

%Written just to simplify what is going on to be sure how the code worked and to narrow down the problem to longtable.4ht
%% For now we have set the option in the makefile to old-longtable as longtable.4ht is clearly broken still. The bug is: https://puszcza.gnu.org.ua/bugs/?196
%% How longtable.4ht works is mysterious... Some progress made (see longtable.4ht in assets but needs more unpicking then I have time for
%\Configure{longtable}
%a	{\IgnorePar\EndP\HCode{<div class="EHC-longtable"><table>}}
%b	{\HCode{</table></div>}}
%c	{\HCode{<tr id="TBL-\TableNo-\HRow-">}}
%d	{\HCode{</tr>}}
%e	{\HCode{<td>}\SaveEndP\par\ShowPar}
%f	{\IgnorePar \EndP \HCode{</td>}}

%{\IgnorePar\EndP \HCode{<!--l. \the\inputlineno-->% <div class="longtable">} \halignTB{longtable}\putVBorder }
%{\HCode{</table></div>}}    
%{\HCode{<tr \Hnewline}\halignTR\HCode{ id="TBL-\TableNo-\HRow-">}}
%{\r:HA}
%{\HCode{<td \ifnum \HMultispan>1 colspan="\HMultispan"\fi}\halignTD \HCode{ id="TBL-\TableNo-\HRow-\HCol"\Hnewline class="td}\NoFonts\bgroup\ifx \ttfamily\:UnDef \else \ttfamily\fi\ColMargins\egroup\EndNoFonts\HCode{">}\SaveEndP\par\ShowPar\PushStack\Table:Stck\TableNo}
%{\PopStack\Table:Stck\TableNo \IgnorePar \EndP \d:HA}

\input{macros.tex}

\begin{document}
\EndPreamble
